plugins {
    id 'java'
    id 'application'
    id "io.freefair.lombok" version "6.6.1"
    id "org.flywaydb.flyway" version "9.8.1"
}

group 'com.distribuida.apps.books'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    helidonVersion = '3.1.0'
    mainClass='io.helidon.microprofile.cdi.Main'
}

dependencies {
    implementation platform("io.helidon:helidon-dependencies:${project.helidonVersion}")

    //implementation 'io.helidon.microprofile.bundles:helidon-microprofile'
    implementation 'io.helidon.microprofile.server:helidon-microprofile-server'
    implementation 'io.helidon.microprofile.rest-client:helidon-microprofile-rest-client'

    implementation 'io.helidon.dbclient:helidon-dbclient'
    implementation 'io.helidon.dbclient:helidon-dbclient-jdbc'

    implementation 'org.glassfish.jersey.media:jersey-media-json-binding'
    //healpchecks
    implementation 'io.helidon.microprofile.health:helidon-microprofile-health'
    implementation 'io.helidon.health:helidon-health-checks'

    //fault-tolerance
    implementation 'io.helidon.microprofile:helidon-microprofile-fault-tolerance'
    implementation 'io.helidon.microprofile.metrics:helidon-microprofile-metrics'

    testImplementation 'io.helidon.microprofile.tests:helidon-microprofile-tests-junit5'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    //tracing
    implementation 'io.helidon.microprofile.tracing:helidon-microprofile-tracing'
    implementation 'io.helidon.tracing:helidon-tracing-jaeger'

    implementation group: 'org.postgresql', name: 'postgresql', version: '42.5.1'
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.1'

    // https://mvnrepository.com/artifact/org.flywaydb/flyway-core
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '9.11.0'
}

test {
    useJUnitPlatform()
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/distribuida'
    user = 'postgres'
    password = 'postgres'
    schemas = ['public']
}

sourceSets {
    main {
        output.resourcesDir = file("${buildDir}/classes/java/main")
    }
}

task copyLibs(type: Copy) {
    from configurations.runtimeClasspath
    into 'build/libs/libs'
}

jar {
    archiveFileName = "${project.name}.jar"
    manifest {
        attributes ('Main-Class': "${project.mainClass}" ,
                'Class-Path': configurations.runtimeClasspath.files.collect { "libs/$it.name" }.join(' ')
        )
    }
}

application {
    mainClass = "${project.mainClass}"
}
